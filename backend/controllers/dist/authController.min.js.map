{"version":3,"sources":["authController.js"],"names":["User","require","registerUser","req","res","_req$body","name","email","password","address","role","newUser","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","abrupt","status","json","message","existingUser","user","t0","console","error","stop","_req$body2","_context2","module","exports","loginUser"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,kBAErBC,aAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAX,EAEmDF,EAAIc,KAA7CX,EAFVD,EAEUC,KAAMC,EAFhBF,EAEgBE,MAAOC,EAFvBH,EAEuBG,SAAUC,EAFjCJ,EAEiCI,QAASC,EAF1CL,EAE0CK,KAF1CI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAM,MAM+BlB,KAAKmB,QAAQ,CAAEZ,MAAAA,KAN9C,KAAA,EAAA,GAAAO,EAAAM,KAAA,OAAAN,EAAAO,OAAA,SACqBjB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,yBADrBV,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,OACqBL,EAAA,IAAAX,KAAA,CAAAM,KAAAA,EAAAC,MAAAA,EAKyBA,SAAAA,EAAFE,QAAAA,EAWtCC,KAAAA,IAjBNI,EAAAE,KAAA,GAAAJ,mBAAAM,MACqBP,EAMbc,QAPR,KAAA,GACqBrB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,+BAAAE,KAAAf,IADrBG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,MAAA,GACqBc,QAAAC,MAAA,0BAAAf,EAAAa,IAOeH,EAAAA,OAAAA,KAAOD,KAAE,CAAAC,QAAA,8CAR7C,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAgB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAYUnB,UAXW,SAWGX,EAAKI,GAXR,IAAA2B,EAAAxB,EAAAC,EAAAkB,EAAA,OAAAd,mBAAAC,MAAA,SAAAmB,GAAA,OAAA,OAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAAA,OAAAe,EAWQ5B,EAAAc,KACvBX,EAZeyB,EAYfzB,MAAIE,EAZWuB,EAYXvB,SAZWwB,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EAAAJ,mBAAAM,MAefT,KAJuBU,QAAA,CAAAZ,MAAAA,KAXR,KAAA,EAAA,GAefE,EAfeuB,EAAAZ,KAAA,CAAAY,EAAAhB,KAAA,EAAA,MAAA,OAAAgB,EAAAX,OAAA,SAAAjB,EAmBjBkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,oBAnBiB,KAAA,EAAA,GA0CbE,EAAKlB,WAAaA,EA1CL,OAAAwB,EAAAX,OAAA,SAAAjB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,wBAAAQ,EAAAhB,KAAA,EAAA,MAAA,KAAA,EAuB+CU,EAAAA,OAAAA,KAAMf,KAAAA,CAAAA,QAAAA,mBAAAA,KAAAA,IAvBrDqB,EAAAhB,KAAA,GAAA,MAAA,KAAA,GAAAgB,EAAAjB,KAAA,GAAAiB,EAAAL,GAAAK,EAAA,MAAA,GAAAJ,QAAAC,MAAA,yBAAAG,EAAAL,IAAAvB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,6CAAA,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAF,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAG,OAAAC,QAAA,CAAAhC,aAAAA,aAAAiC,UAAAA","file":"authController.min.js","sourcesContent":["const User = require('../models/User'); // Assuming you have a User model\r\n\r\n// Register a new user\r\nconst registerUser = async (req, res) => {\r\n  const { name, email, password, address, role } = req.body;\r\n\r\n  try {\r\n    // Check if the user already exists\r\n    const existingUser = await User.findOne({ email });\r\n    if (existingUser) {\r\n      return res.status(400).json({ message: 'User already exists' });\r\n    }\r\n\r\n    // Create a new user\r\n    const newUser = new User({\r\n      name,\r\n      email,\r\n      password, // You may want to hash the password before saving\r\n      address,\r\n      role,\r\n    });\r\n\r\n    // Save the user to the database\r\n    await newUser.save();\r\n\r\n    // Respond with success message and user data\r\n    res.status(201).json({ message: 'User registered successfully', user: newUser });\r\n  } catch (err) {\r\n    console.error('Error registering user:', err);\r\n    res.status(500).json({ message: 'Error registering user. Please try again.' });\r\n  }\r\n};\r\n\r\n// Login user (basic example, consider adding password hashing and JWT)\r\nconst loginUser = async (req, res) => {\r\n  const { email, password } = req.body;\r\n\r\n  try {\r\n    // Find user by email\r\n    const user = await User.findOne({ email });\r\n    if (!user) {\r\n      return res.status(400).json({ message: 'User not found' });\r\n    }\r\n\r\n    // Validate password (hashing needed for production)\r\n    if (user.password !== password) {\r\n      return res.status(400).json({ message: 'Incorrect password' });\r\n    }\r\n\r\n    // Respond with the user (consider JWT for better security)\r\n    res.status(200).json({ message: 'Login successful', user });\r\n  } catch (err) {\r\n    console.error('Error logging in user:', err);\r\n    res.status(500).json({ message: 'Error logging in user. Please try again.' });\r\n  }\r\n};\r\n\r\nmodule.exports = { registerUser, loginUser };\r\n"]}