{"version":3,"sources":["storeRoutes.js"],"names":["express","require","Store","Router","router","get","req","res","stores","regeneratorRuntime","async","_context","prev","next","awrap","find","sent","t0","status","json","message","stop","post","_req$body","name","address","rating","store","_context2","body"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,MAAAD,QAAA,mBACMD,OAAUC,QAAQE,SAKxBC,OAAOC,IAAI,IAAK,SAAOC,EAAKC,GAAZ,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAESZ,MAAMa,QAFf,KAAA,EAENP,EAFMG,EAAAK,KAAhBZ,EAAOC,KAAIG,GAAKG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,MAAA,GAAAJ,EAAAW,OAAA,KAAAC,KAAA,CAAAC,QAAA,iBAAA,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAjB,OAAAkB,KAAA,IAAA,SAAAhB,EAAAC,GAAA,IAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlB,mBAAAC,MAAA,SAAAkB,GAAA,OAAA,OAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,KAAA,EAAA,OAAAU,EAAAjB,EAAAuB,KAAAL,EAAAD,EAAAC,KAAAC,EAAAF,EAAAE,QAAAC,EAAAH,EAAAG,OAAAE,EAAAhB,KAAA,EAENJ,EAFM,IAAAN,MAAA,CAAAsB,KAAAA,EAAAC,QAAAA,EAAAC,OAAAA,IAAAE,EAAAf,KAAA,EAAAJ,mBAAAK,MAGZP,EAAIY,QAHQ,KAAA,EAAAZ,EAAAW,OAAA,KAAAC,KAAAQ,GAAAC,EAAAf,KAAA,GAAA,MAAA,KAAA,EAAAe,EAAAhB,KAAA,EAAAgB,EAAAX,GAAAW,EAAA,MAAA,GAkBZrB,EAAIW,OAAO,KAAKC,KAAK,CAAEC,QAAS,iBAlBpB,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAP,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAKZd,OAAAA,QAAIW","file":"storeRoutes.min.js","sourcesContent":["// backend/routes/storeRoutes.js\r\nconst express = require('express');\r\nconst Store = require('../models/Store');\r\nconst router = express.Router();\r\n\r\n// Get all stores\r\nrouter.get('/', async (req, res) => {\r\n  try {\r\n    const stores = await Store.find();\r\n    res.json(stores);\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Server error' });\r\n  }\r\n});\r\n\r\n// Add new store\r\nrouter.post('/', async (req, res) => {\r\n  const { name, address, rating } = req.body;\r\n\r\n  try {\r\n    const store = new Store({ name, address, rating });\r\n    await store.save();\r\n    res.status(201).json(store);\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Server error' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"]}